import { createSlice } from '@reduxjs/toolkit';

const initialState = {
  favorites: {}, // –æ–±'—î–∫—Ç, –¥–µ –∫–ª—é—á - userId, –∑–Ω–∞—á–µ–Ω–Ω—è - –º–∞—Å–∏–≤ —É–ª—é–±–ª–µ–Ω–∏—Ö –ª—ñ–∫–∞—Ä—ñ–≤
  userId: null, // –î–æ–¥–∞—î–º–æ –ø–æ–ª–µ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è userId
};

export const favoritesSlice = createSlice({
  name: 'favorites',
  initialState,
  reducers: {
    addFavorite: (state, action) => {
      const { userId, doctor } = action.payload;
      const favoritesForUser = state.favorites[userId] || []; // –û—Ç—Ä–∏–º—É—î–º–æ –º–∞—Å–∏–≤ —É–ª—é–±–ª–µ–Ω–∏—Ö –ª—ñ–∫–∞—Ä—ñ–≤ –¥–ª—è –∑–∞–¥–∞–Ω–æ–≥–æ userId
      console.log('üöÄ ~ favoritesForUser:', favoritesForUser);
      const isAlreadyFavorite = favoritesForUser.some(
        favorite => favorite.name === doctor.name
      );
      if (!isAlreadyFavorite) {
        favoritesForUser.push(doctor); // –î–æ–¥–∞—î–º–æ –ª—ñ–∫–∞—Ä—è –¥–æ –º–∞—Å–∏–≤—É —É–ª—é–±–ª–µ–Ω–∏—Ö –ª—ñ–∫–∞—Ä—ñ–≤ –¥–ª—è –∑–∞–¥–∞–Ω–æ–≥–æ userId
        state.favorites[userId] = favoritesForUser; // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –¥–ª—è –∑–∞–¥–∞–Ω–æ–≥–æ userId
      } else {
        console.log('This doctor is already in favorites!');
      }
    },
    removeFavorite: (state, action) => {
      const { userId, doctorName } = action.payload;
      const favoritesForUser = state.favorites[userId] || [];
      console.log('üöÄ ~ favoritesForUser:', favoritesForUser);
      const updatedFavorites = favoritesForUser.filter(
        doctor => doctor.name !== doctorName
      );
      state.favorites[userId] = updatedFavorites;
    },
    setUserId: (state, action) => {
      state.userId = action.payload; // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ userId
    },
  },
});

export const { addFavorite, removeFavorite, setUserId } =
  favoritesSlice.actions;

export default favoritesSlice.reducer;
